name: Test workflow on minikube + argo 
on:
  pull_request:
    branches:
    - main
jobs:
  job1:
    runs-on: ubuntu-latest
    name: muonCorrections test - minikube + argo
    steps:
    - uses: actions/checkout@v2
    - name: Start a minikube cluster
      run: |
        minikube start
        n=0; until ((n >= 60)); do kubectl -n default get serviceaccount default -o name && break; n=$((n + 1)); sleep 1; done; ((n < 60))
    - name: Set up persistent volume and storage pod
      run: |
        kubectl apply -f RochesterCorrections/workflows/volumes.yaml  
        kubectl cp -n argo RochesterCorrections/ pod/task-pv-pod:/mnt/data/

    - name: Set up argo
      run: |
        kubectl create ns argo
        kubectl apply -n argo -f https://raw.githubusercontent.com/argoproj/argo-workflows/stable/manifests/quick-start-postgres.yaml
        curl -sLO https://github.com/argoproj/argo-workflows/releases/download/v3.1.1/argo-linux-amd64.gz
        gunzip argo-linux-amd64.gz
        chmod +x argo-linux-amd64 
        sudo mv ./argo-linux-amd64 /usr/local/bin/argo
        argo version
    - name: Submit the argo test workflow
      run: |
        ls -l RochesterCorrections/workflows/workflow_argo.yaml 
        cp RochesterCorrections/workflows/workflow_argo.yaml .
        argo submit -n argo  --wait workflow_argo.yaml
        argo get -n argo @latest
    - name: Check the output
      run: |
        argo logs -n argo @latest
        mkdir outputs
        echo Copy file with kubectl cp task-pv-pod:/mnt/data/ outputs/ :
        kubectl cp task-pv-pod:/mnt/data/ outputs/
        echo ls -l :
        ls -l
    - name: Upload the ouput as a github artifact
      uses: actions/upload-artifact@v2
      with:
        name: output
        path: outputs/
